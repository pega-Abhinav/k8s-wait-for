name: Build and Deploy

on:
  push:
    branches: ["test"]

env:
  TARGET: linux/amd64
  BUILD_FLAGS: --no-cache

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0
      - name: Build the Docker images
        run: make images
  scan:
    needs: [ "build" ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          # Need tags for Makefile logic to work
          fetch-depth: 0

      - name: Build the Docker image
        env:
          # amd build so that local 'docker images' can access images
          TARGET: linux/amd64
          BUILD_FLAGS: --load --no-cache
        run: make images

      - name: Scan image
        id: scan
        uses: anchore/scan-action@v3
        with:
          image: "ganga3/k8s-wait-for:latest"
          fail-build: true
          severity-cutoff: "high"
          output-format: sarif

      - name: Log Scan Results
        if: always()
        run: |
          echo "Failures:"
          cat ${{ steps.scan.outputs.sarif }} | jq 'if .runs[0].tool.driver.rules != null then .runs[0].tool.driver.rules[].shortDescription.text else "" end' | grep -i "critical" || true
          cat ${{ steps.scan.outputs.sarif }} | jq 'if .runs[0].tool.driver.rules != null then .runs[0].tool.driver.rules[].shortDescription.text else "" end' | grep -i "high" || true
          echo "Warnings:"
          cat ${{ steps.scan.outputs.sarif }} | jq 'if .runs[0].tool.driver.rules != null then .runs[0].tool.driver.rules[].shortDescription.text else "" end' | grep -i "medium" || true
          cat ${{ steps.scan.outputs.sarif }} | jq 'if .runs[0].tool.driver.rules != null then .runs[0].tool.driver.rules[].shortDescription.text else "" end' | grep -i "low" || true
          cat ${{ steps.scan.outputs.sarif }} | jq 'if .runs[0].tool.driver.rules != null then .runs[0].tool.driver.rules[].shortDescription.text else "" end' | grep -iv "critical\|high\|medium\|low" || true

      - name: Publish Scan Results as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-scan-results
          path: ${{ steps.scan.outputs.sarif }}

      - name: View sarif file
        if: always()
        run: | 
          cat ${{ steps.scan.outputs.sarif }}

      - name: Upload Anchore Scan SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  deploy:
    name: Push to DockerHub
    runs-on: ubuntu-latest
    needs: [scan]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check out working repository
        uses: actions/checkout@v2
      - name: Push image to dockerhub
        run: make push
